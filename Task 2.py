f = open('27_B.txt') #считываем файл
n = int(f.readline()) # считываем кол-во чисел
INF = 10**20 # вводим переменную "бесконечности" для удобного нахождения максимальной суммы подпоследовательности 
min_prs = [0] + [INF]*126 # вводим массив промежуточных минимальных сумм под каждый остаток 127 (если промежуточные суммы мимнимальны, то при вычитании этой минимальной суммы из
#суммы всех предыдущих чисел с таким же остатком при  делении на 127 мы получим максимальную сумму чисел непрерывной подпоследовательности, делящуюся на 127
l_min_prs = [0]*127 #такой же принцип что и с суммами, чем меньше промежуточная длина, тем больше будет длина подпоследовательности
prs, max_s, max_l = 0, 0, 0 # сумма чисел на каждом этапе / максимальная сумма /  максимальная длина
for i in range(n):
    prs += int(f.readline()) # считываем тек-ее число, суммируем его в текущую подпоследовательность всех ранее идущих чисел
    r = prs % 127 # считаем остаток текущей максимальной подпоследовательности
    if min_prs[r] != INF: #если у нас была до этого подпоследовательности с таким остатком:
        s = prs - min_prs[r] # вводим переменную суммы под данный остаток (чтоб на 127 делилось) на "текущий момент"
        l = i - l_min_prs[r] + 1 # аналогично вводим переменную длины текущей подпоследовательности
        if s > max_s or s == max_s and l > ml: #если тек-ая сумма больше макс суммы или тек сумма равна макс сумме и длина тек подпослед-ти больше макс длины:
            ms = s #макс сумма == тек сумме
            ml = l #макс длина == тек длине
    else: # если до этого не было подпоследовательности с таким остатком
        min_prs[r] = prs # на текущий остаток в массиве "загружаем" текущую подпоследовательность всех предыдущих чисел с текущим остатком
        l_min_prs[r] = i + 1 #аналогично для длины
print(ml, ms, sep=' ') #выводим ответ
